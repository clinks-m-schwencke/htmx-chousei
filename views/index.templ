package views

import "chopitto-task/cmd/lib/types"

templ Index(tasks []types.Task) {
	@Main("Chopitto Task") {
		<header class="bg-red-50 px-8 py-4">
			<h1 class="text-3xl">Chopitto Task</h1>
		</header>
		<main class="p-8">
			<h2 class="text-xl">Your tasks</h2>
			<table id="task-list">
				<thead>
					<th class="px-2 py-1">Done?</th>
					<th class="px-2 py-1">Title</th>
					<th class="px-2 py-1">Author</th>
					<th class="px-2 py-1">Assigned</th>
					<th class="px-2 py-1">Due</th>
				</thead>
				<tbody>
					for _, task := range(tasks) {
						@TaskSingle(task)
					}
					@TaskFormNew()
				</tbody>
			</table>
		</main>
	}
}

templ TaskSingle(task types.Task) {
	<tr>
		<td class="px-2 py-1">
			<input type="checkbox" checked?={ task.Done }/>
			<input type="checkbox" checked?={ task.Reviewed } disabled/>
		</td>
		<td class="px-2 py-1">{ task.Title }</td>
		// TODO: Make it an avatar circle
		<td class="px-2 py-1">{ task.AuthorName }</td>
		// TODO: Make it an avatar circle
		<td class="px-2 py-1">{ task.AssignedName }</td>
		<td class="px-2 py-1">{ task.DueOn }</td>
	</tr>
}

templ TaskFormNew() {
	<tr>
		<form class="contents" hx-post="/task">
			<td class="px-2 py-1">
				<input type="checkbox" disabled/>
				<input type="checkbox" disabled/>
			</td>
			<td class="px-2 py-1">
				<input type="text" name="title" id="title" required/>
			</td>
			<td class="px-2 py-1">
				<select name="author" id="author" disabled>
					<option value="1" selected>Matthew Schwencke</option>
					<option value="2">Test Man</option>
					<option value="3">Test Lady</option>
				</select>
			</td>
			<td class="px-2 py-1">
				<select name="assigned" id="assigned" required>
					<option value="" disabled selected>Select Person</option>
					<option value="1">Matthew Schwencke</option>
					<option value="2">Test Man</option>
					<option value="3">Test Lady</option>
				</select>
			</td>
			<td class="px-2 py-1">
				<input type="date" name="due-on" id="due-on"/>
			</td>
			<td>
				<button type="submit">Create</button>
			</td>
		</form>
	</tr>
}

templ MeetingCard(title string, description string) {
	<article>
		<h4>{ title }</h4>
		<p>{ description }</p>
	</article>
}

templ OobMeetingCard(title string, description string) {
	<div id="events" hx-swap-oob="afterbegin">
		@MeetingCard(title, description)
	</div>
}

templ MeetingForm(formData types.FormData) {
	<form hx-post="/meeting">
		<div class="flex min-w-min flex-grow gap-4 p-4">
			<div class="w-full">
				<div>
					<label class="block">Event Title </label>
					<input id="title" name="title" type="text"/>
				</div>
				<div>
					<label class="block">Event Description (Optional) </label>
					<textarea id="description" name="description"></textarea>
				</div>
			</div>
			<div class="w-full">
				<label class="block">Dates & Times </label>
				<small>New line for each time</small>
				<textarea id="datetimes-textarea" name="dates" placeholder="yyyy-MM-dd, HH:mm"></textarea>
			</div>
			<div class="w-full">
				<label class="block">Select Dates & Times </label>
				<input id="date-picker" type="date"/>
				<input id="time-picker" type="time"/>
				<button type="button" class="rounded bg-blue-400 px-4 py-2" onclick="addDate()">Add Date</button>
			</div>
		</div>
		if len(formData.Errors) > 0 {
			for _, item := range formData.Errors {
				<div class="text-red-500">{ item }</div>
			}
		}
		<button type="submit" class="rounded bg-gray-400 p-4">Create Event</button>
	</form>
}
